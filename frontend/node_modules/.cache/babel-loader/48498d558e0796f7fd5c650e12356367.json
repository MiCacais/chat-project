{"ast":null,"code":"var _jsxFileName = \"/Users/michellecacais/Projects/chat-project/frontend/src/components/Chat/Rooms/Rooms.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport RoomList from './RoomsList';\nimport classes from './Rooms.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rooms = props => {\n  _s();\n\n  const [rooms, setRooms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchRoomsHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('http://localhost:3000/rooms');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const transformedData = data.map(roomsData => {\n        return {\n          id: roomsData.id,\n          title: roomsData.title\n        };\n      });\n      setRooms(transformedData);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchRoomsHandler();\n  }, [fetchRoomsHandler]);\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no rooms\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 17\n  }, this);\n\n  if (rooms.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(RoomList, {\n      rooms: rooms,\n      cableApp: props.cableApp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.room,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose a room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Rooms, \"iSEPSo/JpfJE4HtgTsFiZz3c0Zs=\");\n\n_c = Rooms;\nexport default Rooms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"sources":["/Users/michellecacais/Projects/chat-project/frontend/src/components/Chat/Rooms/Rooms.js"],"names":["React","useState","useEffect","useCallback","RoomList","classes","Rooms","props","rooms","setRooms","isLoading","setIsLoading","error","setError","fetchRoomsHandler","response","fetch","ok","Error","data","json","transformedData","map","roomsData","id","title","message","content","length","cableApp","room"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMa,iBAAiB,GAAGX,WAAW,CAAC,YAAY;AAChDQ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;;AAEA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACA,YAAMC,eAAe,GAAGF,IAAI,CAACG,GAAL,CAAUC,SAAD,IAAe;AAC9C,eAAO;AACLC,UAAAA,EAAE,EAAED,SAAS,CAACC,EADT;AAELC,UAAAA,KAAK,EAAEF,SAAS,CAACE;AAFZ,SAAP;AAID,OALuB,CAAxB;AAMAhB,MAAAA,QAAQ,CAACY,eAAD,CAAR;AACD,KAfD,CAeE,OAAOT,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACc,OAAP,CAAR;AACD;;AACDf,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAtBoC,EAsBlC,EAtBkC,CAArC;AAwBAT,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;;AAIA,MAAIa,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAInB,KAAK,CAACoB,MAAN,GAAe,CAAnB,EAAsB;AACpBD,IAAAA,OAAO,gBAAG,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEnB,KAAjB;AAAwB,MAAA,QAAQ,EAAED,KAAK,CAACsB;AAAxC;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,MAAIjB,KAAJ,EAAW;AACTe,IAAAA,OAAO,gBAAG;AAAA,gBAAIf;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,MAAIF,SAAJ,EAAe;AACbiB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AACD,sBACE;AAAS,IAAA,SAAS,EAAEtB,OAAO,CAACyB,IAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGH,OAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CApDD;;GAAMrB,K;;KAAAA,K;AAsDN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport RoomList from './RoomsList';\nimport classes from './Rooms.module.css';\n\nconst Rooms = props => {\n  const [rooms, setRooms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchRoomsHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:3000/rooms');\n      \n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const transformedData = data.map((roomsData) => {\n        return {\n          id: roomsData.id,\n          title: roomsData.title,\n        };\n      });\n      setRooms(transformedData);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchRoomsHandler();\n  }, [fetchRoomsHandler]);\n\n  let content = <p>Found no rooms</p>;\n\n  if (rooms.length > 0) {\n    content = <RoomList rooms={rooms} cableApp={props.cableApp}/>;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n  return (\n    <section className={classes.room}>\n      <h2>Choose a room</h2>\n      {content}\n    </section>\n  );\n};\n\nexport default Rooms;\n"]},"metadata":{},"sourceType":"module"}