{"ast":null,"code":"var _jsxFileName = \"/Users/michellecacais/Downloads/authentication/src/components/Chat/Sender/SenderForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport AuthContext from '../../../store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SenderForm = props => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isValid, setValid] = useState(true);\n  const roomCtx = useContext(AuthContext);\n\n  const inputChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (enteredValue.trim().length === 0) {\n      setValid(false);\n      return;\n    }\n\n    fetch('http://localhost:3000/messages', {\n      method: 'POST',\n      body: JSON.stringify({\n        content: enteredValue,\n        uid: roomCtx.token,\n        room: roomCtx.roomId\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = 'Authentication failed';\n\n          if (data && data.errors && data.errors.full_messages) {\n            errorMessage = data.errors.full_messages;\n          }\n\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      authCtx.login(data.data.uid);\n      history.replace('/');\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: inputChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), !isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Empty message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SenderForm, \"BtW1kybFPRozt1hvJ9b4U3NK840=\");\n\n_c = SenderForm;\nexport default SenderForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SenderForm\");","map":{"version":3,"sources":["/Users/michellecacais/Downloads/authentication/src/components/Chat/Sender/SenderForm.js"],"names":["React","useState","useContext","AuthContext","SenderForm","props","enteredValue","setEnteredValue","isValid","setValid","roomCtx","inputChangeHandler","event","target","value","formSubmitHandler","preventDefault","trim","length","fetch","method","body","JSON","stringify","content","uid","token","room","roomId","headers","then","res","ok","json","data","errorMessage","errors","full_messages","Error","authCtx","login","history","replace","catch","err","alert","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AAE1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,OAAD,EAAUC,QAAV,IAAsBR,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAMS,OAAO,GAAGR,UAAU,CAACC,WAAD,CAA1B;;AAEA,QAAMQ,kBAAkB,GAAGC,KAAK,IAAI;AAClCL,IAAAA,eAAe,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAGH,KAAK,IAAI;AACjCA,IAAAA,KAAK,CAACI,cAAN;;AACA,QAAIV,YAAY,CAACW,IAAb,GAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AACpCT,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACA;AACD;;AACDU,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AACtCC,MAAAA,MAAM,EAAE,MAD8B;AAEtCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,OAAO,EAAElB,YADU;AAEnBmB,QAAAA,GAAG,EAAEf,OAAO,CAACgB,KAFM;AAGnBC,QAAAA,IAAI,EAAEjB,OAAO,CAACkB;AAHK,OAAf,CAFgC;AAOtCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAP6B,KAAnC,CAAL,CAUGC,IAVH,CAUQC,GAAG,IAAI;AACb,UAAIA,GAAG,CAACC,EAAR,EAAY;AACV,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,OAFD,MAEO;AACL,eAAOF,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBI,IAAI,IAAI;AAC7B,cAAIC,YAAY,GAAG,uBAAnB;;AACA,cAAID,IAAI,IAAIA,IAAI,CAACE,MAAb,IAAuBF,IAAI,CAACE,MAAL,CAAYC,aAAvC,EAAsD;AACpDF,YAAAA,YAAY,GAAGD,IAAI,CAACE,MAAL,CAAYC,aAA3B;AACD;;AACD,gBAAM,IAAIC,KAAJ,CAAUH,YAAV,CAAN;AACD,SANM,CAAP;AAOD;AACF,KAtBD,EAsBGL,IAtBH,CAsBSI,IAAD,IAAU;AAChBK,MAAAA,OAAO,CAACC,KAAR,CAAcN,IAAI,CAACA,IAAL,CAAUT,GAAxB;AACAgB,MAAAA,OAAO,CAACC,OAAR,CAAgB,GAAhB;AACD,KAzBD,EAyBGC,KAzBH,CAyBSC,GAAG,IAAI;AACdC,MAAAA,KAAK,CAACD,GAAG,CAACE,OAAL,CAAL;AACD,KA3BD;AA4BD,GAlCD;;AAoCA,sBACE;AAAM,IAAA,QAAQ,EAAE/B,iBAAhB;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEJ;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGG,CAACH,OAAD,iBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAtDD;;GAAMJ,U;;KAAAA,U;AAwDN,eAAeA,UAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport AuthContext from '../../../store/auth-context';\n\nconst SenderForm = props => {\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isValid, setValid] = useState(true);\n\n  const roomCtx = useContext(AuthContext);\n\n  const inputChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (enteredValue.trim().length === 0) {\n      setValid(false);\n      return;\n    }\n    fetch('http://localhost:3000/messages', {\n      method: 'POST',\n      body: JSON.stringify({\n        content: enteredValue,\n        uid: roomCtx.token,\n        room: roomCtx.roomId,\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = 'Authentication failed';\n          if (data && data.errors && data.errors.full_messages) {\n            errorMessage = data.errors.full_messages;\n          }\n          throw new Error(errorMessage);\n        });\n      }\n    }).then((data) => {\n      authCtx.login(data.data.uid);\n      history.replace('/');\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <input type=\"text\" onChange={inputChangeHandler} />\n      <button type=\"submit\">Send</button>\n      {!isValid && <p>Empty message</p>}\n    </form>\n  );\n};\n\nexport default SenderForm;\n"]},"metadata":{},"sourceType":"module"}