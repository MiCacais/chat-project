{"ast":null,"code":"var _jsxFileName = \"/Users/michellecacais/Downloads/authentication/src/components/Chat/Rooms/Rooms.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport classes from './Rooms.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rooms = () => {\n  _s();\n\n  const [rooms, setRooms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchRoomsHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('http://localhost:3000/rooms');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const transformedData = data.results.map(roomsData => {\n        return {\n          id: roomsData.episode_id,\n          title: roomsData.title\n        };\n      });\n      setRooms(transformedData);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchRoomsHandler();\n  }, [fetchRoomsHandler]);\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no rooms\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 17\n  }, this);\n\n  if (rooms.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: classes.rooms,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Rooms, \"iSEPSo/JpfJE4HtgTsFiZz3c0Zs=\");\n\n_c = Rooms;\nexport default Rooms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"sources":["/Users/michellecacais/Downloads/authentication/src/components/Chat/Rooms/Rooms.js"],"names":["React","useState","useEffect","useCallback","classes","Rooms","rooms","setRooms","isLoading","setIsLoading","error","setError","fetchRoomsHandler","response","fetch","ok","Error","data","json","transformedData","results","map","roomsData","id","episode_id","title","message","content","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMW,iBAAiB,GAAGT,WAAW,CAAC,YAAY;AAChDM,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;;AAEA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,YAAMC,eAAe,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;AACtD,eAAO;AACLC,UAAAA,EAAE,EAAED,SAAS,CAACE,UADT;AAELC,UAAAA,KAAK,EAAEH,SAAS,CAACG;AAFZ,SAAP;AAID,OALuB,CAAxB;AAMAlB,MAAAA,QAAQ,CAACY,eAAD,CAAR;AACD,KAhBD,CAgBE,OAAOT,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACgB,OAAP,CAAR;AACD;;AACDjB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAvBoC,EAuBlC,EAvBkC,CAArC;AAyBAP,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;;AAIA,MAAIe,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAIrB,KAAK,CAACsB,MAAN,GAAe,CAAnB,EAAsB;AACpBD,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,MAAIjB,KAAJ,EAAW;AACTiB,IAAAA,OAAO,gBAAG;AAAA,gBAAIjB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,MAAIF,SAAJ,EAAe;AACbmB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AACD,sBACE;AAAI,IAAA,SAAS,EAAEvB,OAAO,CAACE,KAAvB;AAAA,cAA+BqB;AAA/B;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAlDD;;GAAMtB,K;;KAAAA,K;AAoDN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport classes from './Rooms.module.css';\n\nconst Rooms = () => {\n  const [rooms, setRooms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchRoomsHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:3000/rooms');\n      \n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n\n      const transformedData = data.results.map((roomsData) => {\n        return {\n          id: roomsData.episode_id,\n          title: roomsData.title,\n        };\n      });\n      setRooms(transformedData);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchRoomsHandler();\n  }, [fetchRoomsHandler]);\n\n  let content = <p>Found no rooms</p>;\n\n  if (rooms.length > 0) {\n    content = <p>rooms</p>;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n  return (\n    <h1 className={classes.rooms}>{content}</h1>\n  );\n};\n\nexport default Rooms;\n"]},"metadata":{},"sourceType":"module"}