{"ast":null,"code":"var _jsxFileName = \"/Users/michellecacais/Projects/chat-project/frontend/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  roomId: null,\n  userId: null,\n  setRoomId: roomId => {},\n  login: (token, userId) => {},\n  logout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem('token');\n  const [token, setToken] = useState(initialToken);\n  const [userId, setUserId] = useState(null);\n  const [roomId, setRoomId] = useState(null);\n\n  const setRoomHandler = roomId => {\n    setRoomId(roomId);\n  };\n\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = (token, userId) => {\n    setToken(token);\n    setUserId(userId);\n    localStorage.setItem('token', token);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n    setRoomId(null);\n    localStorage.removeItem('token');\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n    roomId: roomId,\n    setRoomId: setRoomHandler,\n    userId: userId\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"NUE/mJPaEtl1otbzEl81RtU/VJQ=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/michellecacais/Projects/chat-project/frontend/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","roomId","userId","setRoomId","login","logout","AuthContextProvider","props","initialToken","localStorage","getItem","setToken","setUserId","setRoomHandler","userIsLoggedIn","loginHandler","setItem","logoutHandler","removeItem","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,UAAU,EAAE,KAF0B;AAGtCC,EAAAA,MAAM,EAAE,IAH8B;AAItCC,EAAAA,MAAM,EAAE,IAJ8B;AAKtCC,EAAAA,SAAS,EAAGF,MAAD,IAAY,CAAE,CALa;AAMtCG,EAAAA,KAAK,EAAE,CAACL,KAAD,EAAQG,MAAR,KAAmB,CAAE,CANU;AAOtCG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAPsB,CAApB,CAApB;AAUA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAACX,KAAD,EAAQY,QAAR,IAAoBf,QAAQ,CAACY,YAAD,CAAlC;AACA,QAAM,CAACN,MAAD,EAASU,SAAT,IAAsBhB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACK,MAAD,EAASE,SAAT,IAAsBP,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMiB,cAAc,GAAIZ,MAAD,IAAY;AACjCE,IAAAA,SAAS,CAACF,MAAD,CAAT;AACD,GAFD;;AAIA,QAAMa,cAAc,GAAG,CAAC,CAACf,KAAzB;;AAEA,QAAMgB,YAAY,GAAG,CAAChB,KAAD,EAAQG,MAAR,KAAmB;AACtCS,IAAAA,QAAQ,CAACZ,KAAD,CAAR;AACAa,IAAAA,SAAS,CAACV,MAAD,CAAT;AACAO,IAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BjB,KAA9B;AACD,GAJD;;AAMA,QAAMkB,aAAa,GAAG,MAAM;AAC1BN,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAR,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAM,IAAAA,YAAY,CAACS,UAAb,CAAwB,OAAxB;AACD,GAJD;;AAMA,QAAMC,YAAY,GAAG;AACnBpB,IAAAA,KAAK,EAAEA,KADY;AAEnBC,IAAAA,UAAU,EAAEc,cAFO;AAGnBV,IAAAA,KAAK,EAAEW,YAHY;AAInBV,IAAAA,MAAM,EAAEY,aAJW;AAKnBhB,IAAAA,MAAM,EAAEA,MALW;AAMnBE,IAAAA,SAAS,EAAEU,cANQ;AAOnBX,IAAAA,MAAM,EAAEA;AAPW,GAArB;AAUA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEiB,YAA7B;AAAA,cACGZ,KAAK,CAACa;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvCM;;GAAMd,mB;;KAAAA,mB;AAyCb,eAAeT,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  roomId: null,\n  userId: null,\n  setRoomId: (roomId) => {},\n  login: (token, userId) => {},\n  logout: () => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const initialToken = localStorage.getItem('token');\n  const [token, setToken] = useState(initialToken);\n  const [userId, setUserId] = useState(null);\n  const [roomId, setRoomId] = useState(null);\n\n  const setRoomHandler = (roomId) => {\n    setRoomId(roomId);\n  };\n\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = (token, userId) => {\n    setToken(token);\n    setUserId(userId);\n    localStorage.setItem('token', token);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n    setRoomId(null);\n    localStorage.removeItem('token');\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n    roomId: roomId,\n    setRoomId: setRoomHandler,\n    userId: userId,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}