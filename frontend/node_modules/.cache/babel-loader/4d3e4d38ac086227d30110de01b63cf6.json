{"ast":null,"code":"var _jsxFileName = \"/Users/michellecacais/Downloads/authentication/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  roomId: null,\n  setRoomId: roomId => {},\n  login: token => {},\n  logout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem('token');\n  const [token, setToken] = useState(initialToken);\n  const [roomId, setRoomId] = useState(null);\n\n  const setRoomHandler = roomId => {\n    setRoomId(roomId);\n  };\n\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = token => {\n    setToken(token);\n    localStorage.setItem('token', token);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n    roomId: roomId,\n    setRoomId: setRoomHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"/8RQRGQ3FE05WJ0TMMxGDuixpJw=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/michellecacais/Downloads/authentication/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","roomId","setRoomId","login","logout","AuthContextProvider","props","initialToken","localStorage","getItem","setToken","setRoomHandler","userIsLoggedIn","loginHandler","setItem","logoutHandler","removeItem","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,UAAU,EAAE,KAF0B;AAGtCC,EAAAA,MAAM,EAAE,IAH8B;AAItCC,EAAAA,SAAS,EAAGD,MAAD,IAAY,CAAE,CAJa;AAKtCE,EAAAA,KAAK,EAAGJ,KAAD,IAAW,CAAE,CALkB;AAMtCK,EAAAA,MAAM,EAAE,MAAM,CAAE;AANsB,CAApB,CAApB;AASA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAACV,KAAD,EAAQW,QAAR,IAAoBd,QAAQ,CAACW,YAAD,CAAlC;AACA,QAAM,CAACN,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMe,cAAc,GAAIV,MAAD,IAAY;AACjCC,IAAAA,SAAS,CAACD,MAAD,CAAT;AACD,GAFD;;AAIA,QAAMW,cAAc,GAAG,CAAC,CAACb,KAAzB;;AAEA,QAAMc,YAAY,GAAId,KAAD,IAAW;AAC9BW,IAAAA,QAAQ,CAACX,KAAD,CAAR;AACAS,IAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8Bf,KAA9B;AACD,GAHD;;AAKA,QAAMgB,aAAa,GAAG,MAAM;AAC1BL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,IAAAA,YAAY,CAACQ,UAAb,CAAwB,OAAxB;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAG;AACnBlB,IAAAA,KAAK,EAAEA,KADY;AAEnBC,IAAAA,UAAU,EAAEY,cAFO;AAGnBT,IAAAA,KAAK,EAAEU,YAHY;AAInBT,IAAAA,MAAM,EAAEW,aAJW;AAKnBd,IAAAA,MAAM,EAAEA,MALW;AAMnBC,IAAAA,SAAS,EAAES;AANQ,GAArB;AASA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEM,YAA7B;AAAA,cACGX,KAAK,CAACY;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAnCM;;GAAMb,mB;;KAAAA,mB;AAqCb,eAAeR,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  roomId: null,\n  setRoomId: (roomId) => {},\n  login: (token) => {},\n  logout: () => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const initialToken = localStorage.getItem('token');\n  const [token, setToken] = useState(initialToken);\n  const [roomId, setRoomId] = useState(null);\n\n  const setRoomHandler = (roomId) => {\n    setRoomId(roomId);\n  };\n\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = (token) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n    roomId: roomId,\n    setRoomId: setRoomHandler\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}