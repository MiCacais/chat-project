{"ast":null,"code":"var _jsxFileName = \"/Users/michellecacais/Downloads/authentication/src/components/Chat/Messages/Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useContext } from 'react';\nimport AuthContext from '../../../store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Messages = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const roomCtx = useContext(AuthContext);\n  const fetchMessagesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('http://messages/message_by_room_and_user', {\n        method: 'GET',\n        body: JSON.stringify({\n          room: roomCtx.roomId\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const transformedData = data.map(messageData => {\n        return {\n          id: messageData.id,\n          title: messageData.title\n        };\n      });\n      setMessages(transformedData);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMessagesHandler();\n  }, [fetchMessagesHandler]);\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No messages yet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 17\n  }, this);\n\n  if (rooms.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Messages, \"lKXKr48+VMa5MacXOYBQLqMpNEg=\");\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/Users/michellecacais/Downloads/authentication/src/components/Chat/Messages/Messages.js"],"names":["React","useState","useEffect","useCallback","useContext","AuthContext","Messages","messages","setMessages","isLoading","setIsLoading","error","setError","roomCtx","fetchMessagesHandler","response","fetch","method","body","JSON","stringify","room","roomId","headers","ok","Error","data","json","transformedData","map","messageData","id","title","message","content","rooms","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,EAAkDC,UAAlD,QAAoE,OAApE;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMY,OAAO,GAAGT,UAAU,CAACC,WAAD,CAA1B;AAEA,QAAMS,oBAAoB,GAAGX,WAAW,CAAC,YAAY;AACnDO,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAAD,EAA6C;AACvEC,QAAAA,MAAM,EAAE,KAD+D;AAEvEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,IAAI,EAAER,OAAO,CAACS;AADK,SAAf,CAFiE;AAKvEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAL8D,OAA7C,CAA5B;;AAUA,UAAI,CAACR,QAAQ,CAACS,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAT,EAAnB;AACA,YAAMC,eAAe,GAAGF,IAAI,CAACG,GAAL,CAAUC,WAAD,IAAiB;AAChD,eAAO;AACLC,UAAAA,EAAE,EAAED,WAAW,CAACC,EADX;AAELC,UAAAA,KAAK,EAAEF,WAAW,CAACE;AAFd,SAAP;AAID,OALuB,CAAxB;AAMAxB,MAAAA,WAAW,CAACoB,eAAD,CAAX;AACD,KAvBD,CAuBE,OAAOjB,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACsB,OAAP,CAAR;AACD;;AACDvB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GA9BuC,EA8BrC,EA9BqC,CAAxC;AAgCAR,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,oBAAoB;AACrB,GAFQ,EAEN,CAACA,oBAAD,CAFM,CAAT;;AAIA,MAAIoB,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAIC,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AACpBF,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,MAAIvB,KAAJ,EAAW;AACTuB,IAAAA,OAAO,gBAAG;AAAA,gBAAIvB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,MAAIF,SAAJ,EAAe;AACbyB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AACD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,OAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA9DD;;GAAM5B,Q;;KAAAA,Q;AAgEN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useCallback, useContext } from 'react';\nimport AuthContext from '../../../store/auth-context';\n\nconst Messages = () => {\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const roomCtx = useContext(AuthContext);\n\n  const fetchMessagesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://messages/message_by_room_and_user', {\n        method: 'GET',\n        body: JSON.stringify({\n          room: roomCtx.roomId,\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const transformedData = data.map((messageData) => {\n        return {\n          id: messageData.id,\n          title: messageData.title,\n        };\n      });\n      setMessages(transformedData);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMessagesHandler();\n  }, [fetchMessagesHandler]);\n\n  let content = <p>No messages yet</p>;\n\n  if (rooms.length > 0) {\n    content = <p>content</p>;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n  return (\n    <section>\n      <p>Messages</p>\n      {content}\n    </section>\n  );\n};\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}